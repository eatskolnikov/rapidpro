-extends 'smartmin/update.html'

{% load smartmin temba compress i18n flows %}

-block pre-form
  :css
    .control-label {
      display: none !important;
    }
    .select2-container-multi .select2-choices .select2-search-field input.select2-active {
      background: none !important;
    }
    .launch-message {
      color: #569D9B;
      font-size: 15px;
      margin: 0 0 15px 0;
    }

-block fields
  -if object.flow_type == 'F' and not send_channel
    %p
    -blocktrans with name=brand.name
      To get started you need to add a channel to your account. A channel is a phone number or social network
      account which {{ name }} can use to send and receive messages on your behalf. You can choose to use an
      Android phone and your own cell phone plan, or we can connect you with a service provider in your country
      directly.
    %hr
    %p
      -trans "You can always test your flow using the simulator, click"
        %span.glyph.icon-mobile{style:"padding-top:2px;"}
      -trans "on the right to open it."

  -elif object.flow_type == 'U' and not is_ussd_channel
    %p
    -blocktrans with name=brand.name
      To get started you need to add a USSD channel to your account. You can choose between USSD channels
      that are available in your country.
    %hr
    %p
      -trans "You can always test your flow using the simulator, click"
        %span.glyph.icon-mobile{style:"padding-top:2px;"}
      -trans "on the right to open it."

  -elif object.flow_type == 'V' and not call_channel
    %p
      -blocktrans with name=brand.name
        To get started you need to add a voice-enabled channel to your account. A voice-enabled channel is a
        phone number which {{ name }} can use to make and receive phone calls on your behalf. For example, Twilio
        is a service which provides voice-enabled numbers which you can add as channels in your {{ name }} account.

  -else
    .launch-message
      -trans "To start the flow when someone sends a specific word, please specify the keyword(s) below."

    .field.keyword_triggers
      {% render_field 'keyword_triggers' %}

    #embedded-data.launch-flow-keyword
      .embed-row-keyword
        .embed-row-keyword-field
          %label
            -trans "Keyword"
        %select#embedded_keyword{name:'embedded_keyword'}
          %option{value:'default'}
            -trans "Default"
          -for keyword in current_keywords
            %option{value:"{{ keyword.keyword }}"}
              {{ keyword.keyword }}

      %div.embed-row-content.embed-row-content-default.active
        .embed-row.embed-template.embed-template-default
          .embed-field.embed-field-default
            %input{type:'text', maxlength:'36'}
          .embed-value.embed-value-default
            %input{type:'text'}
          .embed-remove{onclick:'removeEmbed($(this), "", "default")'}
            .icon.icon-close
          .embed-error-message.embed-error-message-field
          .embed-error-message.embed-error-message-value

        .embed-row.embed-header.embed-header-default.inactive
          .embed-field
            %label
              -trans "Embedded field"
          .embed-value
            %label
              -trans "Embedded value"

        .embed-container.embed-container-default

        .add-new-embed
          %a{href:'javascript:;', onclick:'addEmbed("", "", "", "default")'}
            -trans "Add embedded data"

      -for keyword in current_keywords
        %div{class:"embed-row-content embed-row-content-{{ keyword.keyword }}"}
          %div{class:"embed-row embed-template embed-template-{{ keyword.keyword }}"}
            %div{class:"embed-field embed-field-{{ keyword.keyword }}"}
              %input{type:'text', maxlength:'36'}
              %div{class:"embed-field-slug embed-field-slug-{{ keyword.keyword }}"}
            %div{class:"embed-value embed-value-{{ keyword.keyword }}"}
              %input{type:'text'}
            .embed-remove{onclick:'removeEmbed($(this), "", "{{ keyword.keyword }}")'}
              .icon.icon-close
            .embed-error-message.embed-error-message-field
            .embed-error-message.embed-error-message-value

          %div{class:"embed-row embed-header embed-header-{{ keyword.keyword }} inactive"}
            .embed-field
              %label
                -trans "Embedded field"
            .embed-value
              %label
                -trans "Embedded value"

          %div{class:"embed-container embed-container-{{ keyword.keyword }}"}

          .add-new-embed
            %a{href:'javascript:;', onclick:'addEmbed("", "", "", "{{ keyword.keyword }}")'}
              -trans "Add embedded data"
    .embedded-data-default-message

-block form-buttons
  -if send_channel
    .form-actions
      %input.btn.btn-primary{type:"submit", value:"{{ submit_button_name }}"}

-block modal-script
  {{block.super}}

  %script{src:"{{ STATIC_URL }}js/embedded-data.js"}

  :javascript
  
    $(document).ready(function() {

      $('#id_keyword_triggers').select2({
        tags: [],
        tokenSeparators: [",", " "],
        minimumResultsForSearch: -1,
        placeholder: "Add a keyword to begin this flow",
        containerCssClass: "select2-temba-field"
      });

      $('#embedded_keyword').select2({
        containerCssClass: "select2-temba-field"
      });
      $('#embedded_keyword').on('change', function (e) {
        if (e.added && e.removed) {
          $('.embed-row-content-' + e.added.id).addClass('active');
          $('.embed-row-content-' + e.removed.id).removeClass('active');
        }
      });

      $('#id_keyword_triggers').on('change', function (e) {
        var keyword;
        if (e.added) {
          keyword = e.added;

          // Adding new option to select2 of the keywords
          var newOption = new Option(keyword.text, keyword.id, false, false);
          $('#embedded_keyword').append(newOption).trigger('change');

          // Cloning default template to set the configs for new keyword inserted
          var content = $('.embed-row-content-default').clone();
          content.removeClass('embed-row-content-default').removeClass('active');
          content.addClass('embed-row-content-' + keyword.id);

          var template = content.find('.embed-template-default');
          template.removeClass('embed-template-default');
          template.addClass('embed-template-' + keyword.id);

          var field = template.find('.embed-field-default');
          field.removeClass('embed-field-default').addClass('embed-field-' + keyword.id);

          var value = template.find('.embed-value-default');
          value.removeClass('embed-value-default').addClass('embed-value-' + keyword.id);

          field.find('input').attr('name', 'embedded_field');
          value.find('input').attr('name', 'embedded_value');

          template.find('.embed-remove').attr('onclick', 'removeEmbed($(this), "", "' + keyword.id + '")');

          var header = content.find('.embed-header-default');
          header.removeClass('embed-header-default').addClass('embed-header-' + keyword.id);

          var container = content.find('.embed-container-default');
          container.removeClass('embed-container-default').addClass('embed-container-' + keyword.id);

          var containerCounter = container.find('.embed-counter-default');
          containerCounter.removeClass('embed-counter-default');
          containerCounter.addClass('embed-counter-' + keyword.id);

          var containerField = containerCounter.find('.embed-field-default');
          containerField.removeClass('embed-field-default');
          containerField.addClass('embed-field-' + keyword.id);
          containerField.find('input').attr('name', 'embedded_field_' + keyword.id);

          var containerValue = containerCounter.find('.embed-value-default');
          containerValue.removeClass('embed-value-default');
          containerValue.addClass('embed-value-' + keyword.id);
          containerValue.find('input').attr('name', 'embedded_value_' + keyword.id);

          containerCounter.find('.embed-remove').attr('onclick', 'removeEmbed($(this), "", "' + keyword.id + '")');

          var linkAdd = content.find('.add-new-embed').find('a');
          linkAdd.attr('onclick', 'addEmbed("", "", "", "' + keyword.id + '")');

          $('.launch-flow-keyword').append(content);

        } else if (e.removed) {
          // Deleting keyword configs removed
          keyword = e.removed;
          var keywordContent = $('.embed-row-content-' + keyword.id);
          if (keywordContent.hasClass('active')) {
            $('.embed-row-content-default').addClass('active');
            $('#embedded_keyword').val('default');
            $('#embedded_keyword').trigger('change');
          }
          keywordContent.remove();
          $('select#embedded_keyword').find('option[value="' + keyword.id + '"]').remove();
        }
      });

      addEmbed("", "", "", "default");
      {% for keyword in current_keywords %}
        {% if keyword|list_embedded_data %}
          {% for item in keyword|list_embedded_data %}
            addEmbed("{{ item.field }}", "{{ item.value }}", "", "{{ keyword.keyword }}");
          {% endfor %}
        {% else %}
          addEmbed("", "", "", "{{ keyword.keyword }}");
        {% endif %}
      {% endfor %}
    });